type Item implements Node {
  id: ID!
  name: String!
  slug: String!
  tags: [Tag!]!
  sublabel: SubLabel
}

input ItemInput {
  name: String!
}

input ShoppingItemInput {
  quantity: Float
  quantityType: String
  units: Int = 1
  brand: String 
  pricePerUnit: Decimal!
  # Add a validator for checking the provided id for an item exists
  item: String!
}

input ShoppingInput {
  date: Time
  vendor: VendorInput!
  items: [ShoppingItemInput!]!
}

type ShoppingItem implements Node {
  id: ID!
  quantity: Float
  quantityType: String
  units: Int!
  brand: String 
  pricePerUnit: Decimal!
  item: Item!
  shopping: Shopping!
  total: Decimal!
}

type Shopping implements Node {
  id: ID!
  date: Time!
  vendor: Vendor!
  total: Decimal!
  items: [ShoppingItem!]!
}

type Vendor implements Node {
  id: ID!
  name: String!
  slug: String!
  purchases: [Shopping!]!
}

input VendorInput  {
  name: String!
}

type Tag implements Node {
  id: ID!
  name: String!
  children: [SubLabel!]!
}

input TagInput {
  name: String!
}

type SubLabel {
  id: ID!
  name: String!
  items: [Item!]!
}

input SubLabelInput {
  name: String!
}
