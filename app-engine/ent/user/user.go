// Code generated by entc, DO NOT EDIT.

package user

import (
	"fmt"
	"io"
	"strconv"
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldExternalID holds the string denoting the external_id field in the database.
	FieldExternalID = "external_id"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldOtherNames holds the string denoting the other_names field in the database.
	FieldOtherNames = "other_names"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldIsEmailVerified holds the string denoting the is_email_verified field in the database.
	FieldIsEmailVerified = "is_email_verified"
	// FieldExternalSource holds the string denoting the external_source field in the database.
	FieldExternalSource = "external_source"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldExternalID,
	FieldFirstName,
	FieldOtherNames,
	FieldEmail,
	FieldIsEmailVerified,
	FieldExternalSource,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)

// ExternalSource defines the type for the "external_source" enum field.
type ExternalSource string

// ExternalSourceFIREBASE is the default value of the ExternalSource enum.
const DefaultExternalSource = ExternalSourceFIREBASE

// ExternalSource values.
const (
	ExternalSourceFIREBASE ExternalSource = "FIREBASE"
)

func (es ExternalSource) String() string {
	return string(es)
}

// ExternalSourceValidator is a validator for the "external_source" field enum values. It is called by the builders before save.
func ExternalSourceValidator(es ExternalSource) error {
	switch es {
	case ExternalSourceFIREBASE:
		return nil
	default:
		return fmt.Errorf("user: invalid enum value for external_source field: %q", es)
	}
}

// MarshalGQL implements graphql.Marshaler interface.
func (es ExternalSource) MarshalGQL(w io.Writer) {
	io.WriteString(w, strconv.Quote(es.String()))
}

// UnmarshalGQL implements graphql.Unmarshaler interface.
func (es *ExternalSource) UnmarshalGQL(val interface{}) error {
	str, ok := val.(string)
	if !ok {
		return fmt.Errorf("enum %T must be a string", val)
	}
	*es = ExternalSource(str)
	if err := ExternalSourceValidator(*es); err != nil {
		return fmt.Errorf("%s is not a valid ExternalSource", str)
	}
	return nil
}
