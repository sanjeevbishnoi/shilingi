// Code generated by entc, DO NOT EDIT.

package shopping

import (
	"time"
)

const (
	// Label holds the string label denoting the shopping type in the database.
	Label = "shopping"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// EdgeItems holds the string denoting the items edge name in mutations.
	EdgeItems = "items"
	// EdgeVendor holds the string denoting the vendor edge name in mutations.
	EdgeVendor = "vendor"
	// Table holds the table name of the shopping in the database.
	Table = "shoppings"
	// ItemsTable is the table that holds the items relation/edge.
	ItemsTable = "shopping_items"
	// ItemsInverseTable is the table name for the ShoppingItem entity.
	// It exists in this package in order to avoid circular dependency with the "shoppingitem" package.
	ItemsInverseTable = "shopping_items"
	// ItemsColumn is the table column denoting the items relation/edge.
	ItemsColumn = "shopping_items"
	// VendorTable is the table that holds the vendor relation/edge.
	VendorTable = "shoppings"
	// VendorInverseTable is the table name for the Vendor entity.
	// It exists in this package in order to avoid circular dependency with the "vendor" package.
	VendorInverseTable = "vendors"
	// VendorColumn is the table column denoting the vendor relation/edge.
	VendorColumn = "vendor_purchases"
)

// Columns holds all SQL columns for shopping fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "shoppings"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"vendor_purchases",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultDate holds the default value on creation for the "date" field.
	DefaultDate func() time.Time
)
