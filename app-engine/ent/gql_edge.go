// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (i *Item) Purchases(ctx context.Context) ([]*ShoppingItem, error) {
	result, err := i.Edges.PurchasesOrErr()
	if IsNotLoaded(err) {
		result, err = i.QueryPurchases().All(ctx)
	}
	return result, err
}

func (s *Shopping) Items(ctx context.Context) ([]*ShoppingItem, error) {
	result, err := s.Edges.ItemsOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryItems().All(ctx)
	}
	return result, err
}

func (si *ShoppingItem) Item(ctx context.Context) (*Item, error) {
	result, err := si.Edges.ItemOrErr()
	if IsNotLoaded(err) {
		result, err = si.QueryItem().Only(ctx)
	}
	return result, err
}

func (si *ShoppingItem) Shopping(ctx context.Context) (*Shopping, error) {
	result, err := si.Edges.ShoppingOrErr()
	if IsNotLoaded(err) {
		result, err = si.QueryShopping().Only(ctx)
	}
	return result, err
}
